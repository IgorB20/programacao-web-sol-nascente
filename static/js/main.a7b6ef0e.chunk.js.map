{"version":3,"sources":["components/Header.js","pages/Condominios/components/ConfirmModal/index.js","pages/Condominios/components/EditModal/index.js","pages/Condominios/components/CreateModal/index.js","pages/Condominios/index.js","pages/CondominioDetalhes/components/AddResidentModal/index.js","pages/CondominioDetalhes/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","style","borderBottom","alt","src","width","ConfirmModal","condominium","isOpen","handleClose","handleFinishSaving","a","fetch","id","method","headers","request","text","response","console","log","toggle","color","onClick","EditModal","useState","name","cnpj","document","street","address","neighborhood","number","zipCode","city","values","setValues","handleInputChange","ev","target","value","hasEmptyFields","alert","body","JSON","stringify","json","item","size","onChange","CreateModal","clearFields","Condominios","showCreateModal","setShowCreateModal","condominiums","setCondominiums","setRequest","useEffect","getCondominiums","placeholder","borderRadius","border","map","CondominioItem","position","bottom","right","showEditModal","setShowEditModal","showConfirmModal","setShowConfirmModal","navigate","useNavigate","fontWeight","stopPropagation","CreateResidentModal","split","CondominioDetalhes","useParams","setCondominium","showCreateResidentModal","setShowCreateResidentModal","getCondominium","residents","length","resident","Morador","height","marginRight","App","basename","process","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a7b6ef0e.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header(){\n    return (\n        <header className=\"w-100 px-5 py-2 d-flex justify-content-center align-items-center\" style={{borderBottom:\"1px solid #d4d4d4\"}}>\n            <div className=\"w-100\">\n                <img\n                    alt=\"\"\n                    src=\"http://imoveiscj.com.br/site/images/logo-sol-nascente.png\"\n                    style={{width: \"100px\"}}\n                />\n                {/* <h2>Sol nascente</h2> */}\n            </div>\n           \n        </header>\n    );\n}","import React from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\n\nexport default function ConfirmModal({ condominium, isOpen, handleClose, handleFinishSaving  }){\n    \n    async function deleteCondominium(){\n        const request = await fetch(`https://api.zion.lucasbatista.me/condominiums/${condominium.id}`, {\n            method: 'DELETE',\n            headers: { 'Content-type': 'application/json' }\n        });\n        const response = await request.text();\n        console.log(response);\n        handleClose();\n        handleFinishSaving();\n    }\n\n    return (\n        <Modal isOpen={isOpen}>\n            <ModalHeader toggle={handleClose}>\n                Tem certeza?\n            </ModalHeader>\n            <ModalBody>\n                Tem certeza que deseja excluir este condomínio?\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"link\" onClick={handleClose}>Cancelar</Button>\n                <Button color=\"primary\" onClick={deleteCondominium}>Confirmar</Button>\n            </ModalFooter>\n        </Modal>\n    );\n}","import React, { useState } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\n\nexport default function EditModal({ condominium, isOpen, handleClose, handleFinishSaving }){\n    \n    const [values, setValues] = useState({\n        name: condominium.name,\n        cnpj: condominium.document,\n        street: condominium.address.street,\n        neighborhood: condominium.address.neighborhood,\n        number: condominium.address.number,\n        zipCode: condominium.address.zipCode,\n        city: condominium.address.city\n    })\n\n    function handleInputChange(ev) {\n        setValues({\n            ...values,\n            [ev.target.name]: ev.target.value\n        })\n    }\n\n    async function save() {\n        if (hasEmptyFields()) {\n            alert(\"Por favor preencha todos os campos\");\n            return;\n        }\n\n        const request = await fetch(`https://api.zion.lucasbatista.me/condominiums/${condominium.id}`, {\n            method: 'PATCH',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                \"name\": values.name,\n                \"document\": values.cnpj,\n                \"address\": {\n                    \"street\": values.street,\n                    \"neighborhood\": values.neighborhood,\n                    \"number\": values.number,\n                    \"zipCode\": values.zipCode,\n                    \"city\": values.zipCode\n                }\n            })\n        });\n        const response = await request.json();\n        console.log(response);\n        //clearFields();\n        handleClose();\n        handleFinishSaving();\n    }\n\n    function hasEmptyFields() {\n        for (var item in values) {\n            console.log(values[item])\n            if (values[item] === \"\") return true;\n        }\n\n        return false;\n    }\n\n    // function clearFields(){\n    //     setValues({\n    //      name: \"\",\n    //      cnpj: \"\",\n    //      street: \"\",\n    //      neighborhood: \"\",\n    //      number: \"\",\n    //      zipCode: \"\",\n    //      city: \"\"\n    //  })\n    //  }\n\n    return (\n        <Modal isOpen={isOpen} size='lg'>\n            <ModalHeader toggle={handleClose}>\n                Editar condomínio\n            </ModalHeader>\n            <ModalBody>\n                <Form>\n                    <FormGroup>\n                        <Label>Nome: </Label>\n                        <Input\n                            name=\"name\"\n                            value={values.name}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>CNPJ: </Label>\n                        <Input\n                            name=\"cnpj\"\n                            value={values.cnpj}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>Rua: </Label>\n                        <Input\n                            name=\"street\"\n                            value={values.street}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>Número: </Label>\n                        <Input\n                            name=\"number\"\n                            value={values.number}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>Bairro: </Label>\n                        <Input\n                            name=\"neighborhood\"\n                            value={values.neighborhood}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>Cidade: </Label>\n                        <Input\n                            name=\"city\"\n                            value={values.city}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>CEP: </Label>\n                        <Input\n                            name=\"zipCode\"\n                            value={values.zipCode}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n                </Form>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"link\" onClick={handleClose}>Cancelar</Button>\n                <Button color=\"primary\" onClick={save}>Salvar</Button>\n            </ModalFooter>\n        </Modal>\n    );\n}","import React, { useState } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\n\nexport default function CreateModal({ isOpen, handleClose, handleFinishSaving }) {\n\n    const [values, setValues] = useState({\n        name: \"\",\n        cnpj: \"\",\n        street: \"\",\n        neighborhood: \"\",\n        number: \"\",\n        zipCode: \"\",\n        city: \"\"\n    })\n\n    function handleInputChange(ev) {\n        setValues({\n            ...values,\n            [ev.target.name]: ev.target.value\n        })\n    }\n\n    async function save() {\n        if (hasEmptyFields()) {\n            alert(\"Por favor preencha todos os campos\");\n            return;\n        }\n\n        const request = await fetch(\"https://api.zion.lucasbatista.me/condominiums\", {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                \"name\": values.name,\n                \"document\": values.cnpj,\n                \"address\": {\n                    \"street\": values.street,\n                    \"neighborhood\": values.neighborhood,\n                    \"number\": values.number,\n                    \"zipCode\": values.zipCode,\n                    \"city\": values.zipCode\n                }\n            })\n        });\n        const response = await request.json();\n        console.log(response);\n        clearFields();\n        handleClose();\n        handleFinishSaving();\n    }\n\n    function hasEmptyFields() {\n        for (var item in values) {\n            console.log(values[item])\n            if (values[item] === \"\") return true;\n        }\n\n        return false;\n    }\n\n    function clearFields(){\n       setValues({\n        name: \"\",\n        cnpj: \"\",\n        street: \"\",\n        neighborhood: \"\",\n        number: \"\",\n        zipCode: \"\",\n        city: \"\"\n    })\n    }\n\n    return (\n        <Modal isOpen={isOpen} size='lg'>\n            <ModalHeader toggle={handleClose}>\n                Adicionar condomínio\n            </ModalHeader>\n            <ModalBody>\n                <Form>\n                    <FormGroup>\n                        <Label>Nome: </Label>\n                        <Input\n                            name=\"name\"\n                            value={values.name}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>CNPJ: </Label>\n                        <Input\n                            name=\"cnpj\"\n                            value={values.cnpj}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>Rua: </Label>\n                        <Input\n                            name=\"street\"\n                            value={values.street}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>Número: </Label>\n                        <Input\n                            name=\"number\"\n                            value={values.number}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>Bairro: </Label>\n                        <Input\n                            name=\"neighborhood\"\n                            value={values.neighborhood}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>Cidade: </Label>\n                        <Input\n                            name=\"city\"\n                            value={values.city}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label>CEP: </Label>\n                        <Input\n                            name=\"zipCode\"\n                            value={values.zipCode}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n                </Form>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"link\" onClick={handleClose}>Cancelar</Button>\n                <Button color=\"primary\" onClick={save}>Salvar</Button>\n            </ModalFooter>\n        </Modal>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap';\nimport ConfirmModal from './components/ConfirmModal';\nimport EditModal from './components/EditModal';\nimport './condominios.css';\nimport { useNavigate } from 'react-router-dom';\nimport CreateModal from './components/CreateModal';\n\n\nexport default function Condominios() {\n\n    const [showCreateModal, setShowCreateModal] = useState(false);\n    const [condominiums, setCondominiums] = useState([]); \n    const [request, setRequest] = useState(true);\n\n    console.log(condominiums);\n    useEffect(()=>{\n        async function getCondominiums(){\n            const request = await fetch(\"https://api.zion.lucasbatista.me/condominiums\");\n            const response = await request.json();\n\n            setCondominiums(response);\n            setRequest(false);\n        \n        }\n\n        if(request) getCondominiums();\n\n    }, [request])\n\n    return (\n        <>\n            <section className=\"container mt-4\">\n                <div>\n                    <input\n                        className=\"w-100 px-3 py-2 mb-4\"\n                        placeholder=\"Pesquise por um condomínio\"\n                        style={{ borderRadius: \"9999px\", border: \"1px solid #d4d4d4\" }}\n                    />\n                </div>\n\n                <ListGroup>\n                   \n                    { \n                        condominiums.map(condominium=>\n                          <CondominioItem\n                            condominium={condominium}\n                            handleFinishSaving={()=>setRequest(true)}\n                        />\n                        )\n                    }\n                </ListGroup>\n\n                <Button color=\"primary\" style={{\n                    position: \"absolute\",\n                    bottom: \"32px\",\n                    right: \"32px\"\n                }}\n                onClick={()=>setShowCreateModal(true)}\n                >\n                    Adicionar condomínio\n                </Button>\n            </section>\n\n            <CreateModal\n                isOpen={showCreateModal}\n                handleClose={()=>setShowCreateModal(false)}\n                handleFinishSaving={()=>setRequest(true)}\n            />\n        </>\n    );\n}\n\nfunction CondominioItem({ condominium, handleFinishSaving}) {\n    const [showEditModal, setShowEditModal] = useState(false);\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n    let navigate = useNavigate();\n\n    function handleClick(){\n        navigate(`/condominio/${condominium.id}`)\n    }\n\n    function handleEditClick(ev){\n        ev.stopPropagation();\n        setShowEditModal(true);\n    }\n\n    function handleDeleteClick(ev){\n        ev.stopPropagation();\n        setShowConfirmModal(true);\n    }\n\n    return (\n        <>\n            <ListGroupItem className=\"d-flex justify-content-between\" onClick={handleClick}>\n                <div>\n                    <span style={{ fontWeight: \"bold\", color: \"#3d3d3d\" }}>{condominium.name} - </span>\n                    <span style={{ color: \"#696969\" }}>{condominium.document}</span>\n                </div>\n\n                <div className=\"d-flex gap-2\">\n                    <Button color=\"warning\" onClick={handleEditClick}>\n                        <i className=\"fas fa-pen\"></i>\n                    </Button>\n                    <Button color=\"danger\" onClick={handleDeleteClick}>\n                        <i className=\"fas fa-trash-alt text-sm\"></i>\n                    </Button>\n                    {/* <Button color=\"info text-white\">Detalhes</Button> */}\n                </div>\n            </ListGroupItem>\n            <EditModal\n                isOpen={showEditModal}\n                handleClose={()=>setShowEditModal(false)}\n                condominium={condominium}\n                handleFinishSaving={handleFinishSaving}\n            />\n            <ConfirmModal\n                isOpen={showConfirmModal}\n                handleClose={()=>setShowConfirmModal(false)}\n                condominium={condominium}\n                handleFinishSaving={handleFinishSaving}\n            />\n        </>\n\n    );\n}","import React, { useState } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\n\nexport default function CreateResidentModal({ isOpen, handleClose, handleFinishSaving, condominium }) {\n\n    const [values, setValues] = useState({\n        name: \"\"\n    })\n\n    function handleInputChange(ev) {\n        setValues({\n            ...values,\n            [ev.target.name]: ev.target.value\n        })\n    }\n\n    async function save() {\n        if (hasEmptyFields()) {\n            alert(\"Por favor preencha todos os campos\");\n            return;\n        }\n\n        const request = await fetch(\"https://api.zion.lucasbatista.me/residents\", {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n                \"name\": values.name,\n                \"email\": `${values.name.split(\" \")[0]}@gmail.com`,\n                \"condominium\": {\n                    \"id\": condominium.id\n                }\n            })\n        });\n        const response = await request.json();\n        console.log(response);\n        clearFields();\n        handleClose();\n        handleFinishSaving();\n    }\n\n    function hasEmptyFields() {\n        for (var item in values) {\n            console.log(values[item])\n            if (values[item] === \"\") return true;\n        }\n\n        return false;\n    }\n\n    function clearFields(){\n       setValues({\n        name: \"\"\n    })\n    }\n\n    return (\n        <Modal isOpen={isOpen} size='lg'>\n            <ModalHeader toggle={handleClose}>\n                Adicionar residente\n            </ModalHeader>\n            <ModalBody>\n                <Form>\n                    <FormGroup>\n                        <Label>Nome: </Label>\n                        <Input\n                            name=\"name\"\n                            value={values.name}\n                            onChange={handleInputChange}\n                        />\n                    </FormGroup>\n                   \n                </Form>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"link\" onClick={handleClose}>Cancelar</Button>\n                <Button color=\"primary\" onClick={save}>Salvar</Button>\n            </ModalFooter>\n        </Modal>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap';\nimport CreateResidentModal from './components/AddResidentModal';\n\n\nexport default function CondominioDetalhes() {\n    const { id } = useParams();\n\n    const [condominium, setCondominium] = useState(null);\n    const [showCreateResidentModal, setShowCreateResidentModal] = useState(false);\n    const [request, setRequest] = useState(true);\n    console.log(condominium)\n\n    useEffect(() => {\n        async function getCondominium() {\n            const request = await fetch(`https://api.zion.lucasbatista.me/condominiums/${id}`);\n            const response = await request.json();\n\n            setCondominium(response);\n            setRequest(false);\n        }\n\n       if(request) getCondominium();\n\n    }, [id, request])\n\n    if(condominium === null) return \"Carregando...\";\n\n    return (\n       <>\n         <section className=\"container\">\n            <div className=\"py-3 d-flex flex-column\">\n                <span style={{ fontWeight: \"bold\", color: \"#3d3d3d\" }}>{ condominium.name } </span>\n                <span style={{ color: \"#696969\" }}>{condominium.document}</span>\n            </div>\n\n            <h3>Moradores: </h3>\n            <ListGroup>\n                {\n                    condominium.residents.length > 0 ?\n                    condominium.residents.map(resident=>\n                        <Morador  resident={resident}/>\n                    ):\n                    <div>Nenhum morador cadastrado ainda</div>\n                }\n            </ListGroup>\n\n\n            <Button color=\"primary\" style={{\n                    position: \"absolute\",\n                    bottom: \"32px\",\n                    right: \"32px\"\n                }}\n                onClick={()=>setShowCreateResidentModal(true)}\n                >\n                    Adicionar residente\n                </Button>\n        </section>\n\n        <CreateResidentModal\n                isOpen={showCreateResidentModal}\n                handleClose={()=>setShowCreateResidentModal(false)}\n                handleFinishSaving={()=>setRequest(true)}\n                condominium={condominium}\n            />\n       </>\n    );\n}\n\nfunction Morador({ resident }) {\n    return (\n        <>\n            <ListGroupItem className=\"d-flex justify-content-between\">\n\n\n                <div className=\"d-flex align-items-center\">\n                    <img\n                        alt=\"\"\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6e/Breezeicons-actions-22-im-user.svg/1200px-Breezeicons-actions-22-im-user.svg.png\"\n                        className=\"\"\n                        style={{ width: \"40px\", height: \"40px\", marginRight: \"12px\", border: \"1px solid #d4d4d4\", borderRadius: \"9999px\" }}\n                    />\n                    <div>\n                        <div>\n                            <span style={{ fontWeight: \"bold\", color: \"#3d3d3d\" }}>{ resident.name }</span>\n                            {/* <span style={{ color: \"#696969\" }}>125.688.039-67</span> */}\n                        </div>\n                        {/* <div>\n                            <span style={{ color: \"#696969\" }}>apto: 301 B2</span>\n                        </div> */}\n                    </div>\n\n                </div>\n\n                <div className=\"d-flex gap-2\">\n                    <Button color=\"warning\">\n                        <i className=\"fas fa-pen\"></i>\n                    </Button>\n                    <Button color=\"danger\">\n                        <i className=\"fas fa-trash-alt text-sm\"></i>\n                    </Button>\n                    {/* <Button color=\"info text-white\">Detalhes</Button> */}\n                </div>\n            </ListGroupItem>\n            {/* <EditModal\n            isOpen={showEditModal}\n            handleClose={()=>setShowEditModal(false)}\n        />\n        <ConfirmModal\n            isOpen={showConfirmModal}\n            handleClose={()=>setShowConfirmModal(false)}\n        /> */}\n        </>\n    );\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport Condominios from './pages/Condominios';\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport CondominioDetalhes from './pages/CondominioDetalhes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Routes>\n          <Route path=\"/\" element={<Condominios />} />\n          <Route path=\"/condominio/:id\" element={<CondominioDetalhes/>} />\n        </Routes>\n      </BrowserRouter>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}